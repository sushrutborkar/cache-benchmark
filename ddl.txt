DROP DATAVERSE w_{i} IF EXISTS;
CREATE DATAVERSE w_{i};
USE w_{i};


CREATE TYPE genericType AS {{ _id: uuid }};
CREATE DATASET history(genericType) PRIMARY KEY _id AUTOGENERATED;

CREATE TYPE CustomerType AS {{ c_w_id: bigint, c_d_id: bigint, c_id: bigint }};
CREATE DATASET customer (CustomerType) PRIMARY KEY c_w_id, c_d_id, c_id;

CREATE TYPE NationType AS {{ n_nationkey: bigint }};
CREATE DATASET nation (NationType) PRIMARY KEY n_nationkey;

CREATE TYPE OrdersType AS {{ o_w_id: bigint, o_d_id: bigint, o_id: bigint }};
CREATE DATASET orders (OrdersType) PRIMARY KEY o_w_id, o_d_id, o_id;

CREATE TYPE StockType AS {{ s_w_id: bigint, s_i_id: bigint }};
CREATE DATASET stock (StockType) PRIMARY KEY s_w_id, s_i_id;

CREATE TYPE ItemType AS {{ i_id: bigint }};
CREATE DATASET item (ItemType) PRIMARY KEY i_id;

CREATE TYPE RegionType AS {{ r_regionkey: bigint }};
CREATE DATASET region (RegionType) PRIMARY KEY r_regionkey;

CREATE TYPE SupplierType AS {{ su_suppkey: bigint }};
CREATE DATASET supplier (SupplierType) PRIMARY KEY su_suppkey; 

CREATE TYPE WarehouseType AS {{ w_id: bigint }};
CREATE DATASET warehouse (WarehouseType) PRIMARY KEY w_id; 

CREATE TYPE DistrictType AS {{ d_w_id: bigint, d_id: bigint }};
CREATE DATASET district (DistrictType) PRIMARY KEY d_w_id, d_id; 

CREATE TYPE NewOrderType AS {{ no_w_id: bigint, no_d_id: bigint, no_o_id: bigint }};
CREATE DATASET neworder (NewOrderType) PRIMARY KEY no_w_id, no_d_id, no_o_id;


LOAD DATASET customer   USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/customer.json"), ("format"="json"));
LOAD DATASET district   USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/district.json"), ("format"="json"));
LOAD DATASET history    USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/history.json"),  ("format"="json"));
LOAD DATASET item       USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/item.json"),     ("format"="json"));
LOAD DATASET nation     USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/nation.json"),   ("format"="json"));
LOAD DATASET neworder   USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/neworder.json"), ("format"="json"));
LOAD DATASET orders     USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/orders.json"),   ("format"="json"));
LOAD DATASET region     USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/region.json"),   ("format"="json"));
LOAD DATASET stock      USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/stock.json"),    ("format"="json"));
LOAD DATASET supplier   USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/supplier.json"), ("format"="json"));
LOAD DATASET warehouse  USING localfs (("path"="127.0.0.1:///home/sushrut/tpc_ch/w_{i}/warehouse.json"),("format"="json"));


CREATE INDEX cu1 ON customer(c_state: string);
CREATE INDEX cu2 ON customer(c_id, c_last: string, c_city: string, c_phone: string);
CREATE INDEX cu3 ON customer(c_d_id);
CREATE INDEX cu4 ON customer(c_balance: double);

CREATE INDEX hi1 ON history(h_c_w_id: bigint, h_c_d_id: bigint, h_c_id: bigint);
CREATE INDEX hi2 ON history(h_w_id: bigint, h_d_id: bigint);

CREATE INDEX or1 ON orders(o_w_id, o_d_id, o_c_id: bigint);
CREATE INDEX or2 ON orders(o_id, o_w_id, o_d_id, o_entry_d: string);
CREATE INDEX or3 ON orders(o_entry_d: string);
CREATE INDEX or4 ON orders(o_ol_cnt: bigint);
CREATE INDEX or5 ON orders(o_c_id: bigint);
CREATE INDEX or6 ON orders(o_d_id);
CREATE INDEX or7 ON orders(o_carrier_id: bigint);

CREATE INDEX it1 ON item(i_data: string);
CREATE INDEX it2 ON item(i_name: string, i_data: string, i_price: double);

CREATE INDEX st1 ON stock(s_i_id);
CREATE INDEX st2 ON stock(s_quantity: bigint);

CREATE INDEX na1 ON nation(n_name: string);

CREATE INDEX su1 ON supplier(su_nationkey: bigint);
CREATE INDEX su2 ON supplier(su_comment: string);

CREATE INDEX orderline_i_id ON orders(UNNEST o_orderline SELECT ol_i_id:BIGINT)   EXCLUDE UNKNOWN KEY;
CREATE INDEX orderline_delivery_d ON orders(UNNEST o_orderline SELECT ol_delivery_d:STRING) EXCLUDE UNKNOWN KEY;


ANALYZE DATASET customer;
ANALYZE DATASET district;
ANALYZE DATASET history;
ANALYZE DATASET item;
ANALYZE DATASET nation;
ANALYZE DATASET neworder;
ANALYZE DATASET orders;
ANALYZE DATASET region;
ANALYZE DATASET stock;
ANALYZE DATASET supplier;
ANALYZE DATASET warehouse;

